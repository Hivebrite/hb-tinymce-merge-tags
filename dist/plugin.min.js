(()=>{"use strict";var e=function(e){return function(t){return t.options.get(e)}},t=e("hb_merge_tags_prefix"),n=e("hb_merge_tags_suffix"),o=e("hb_merge_tags_variables"),r=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"menuitem";return o(e).map((function(n){var o=n.name,r=n.value;return{type:t,onAction:function(){return e.execCommand("insertMergeTagCommand",!1,r)},text:o,value:r}}))},a=function(e){!function(e){e.addCommand("insertMergeTagCommand",(function(o,r){!function(e,o){!function(e,o){var r=t(e),a=n(e),i='<span class="hb-merge-tags" contenteditable="false">'.concat(r).concat(o).concat(a,"</span>");e.insertContent(i)}(e,o)}(e,r)}))}(e)};tinymce.PluginManager.add("hbMergeTags",(function(e){!function(e){console.log("editor",e.options);var t=e.options.register;t("hb_merge_tags_prefix",{processor:"string",default:"{{"}),t("hb_merge_tags_suffix",{processor:"string",default:"}}"}),t("hb_merge_tags_variables",{processor:"object[]",default:[]})}(e),a(e),function(e){var n=t(e);(0,e.ui.registry.addAutocompleter)("hb_merge_tags_autocompleter",{trigger:n,fetch:function(t){var n=r(e,"autocompleteitem").map((function(e){return{text:e.text,type:e.type,value:e.value}})).filter((function(e){return e.text.toLowerCase().includes(t.toLowerCase())}));return Promise.resolve(n)},onAction:function(t,n,o){e.selection.setRng(n),e.execCommand("insertMergeTagCommand",!1,o),t.hide()},minChars:0})}(e),function(e){e.ui.registry.addMenuButton("hbMergeTags",{text:t(e),tooltip:"add a merge tag",fetch:function(t){t(r(e))}})}(e),["LoadContent","init","activate","BeforeGetContent","GetContent","BeforeSetContent","SetContent","ScriptsLoaded","PreInit","PreProcess","PostProcess"].forEach((function(t){e.on(t,(function(e){console.log("TinyMCE event",t,e)}))}))}))})();